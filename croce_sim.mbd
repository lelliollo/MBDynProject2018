#Setup of a the model of a cruciform body, made by a set of flexible beams. The
#model is a simmetric structure, hence modes are closely spaced.
#                      OOO
#                     OOOOO M,I -> lumped parameters of added masses
#                      OOO
#                       §
#                       § m,EJ,EA,L -> parameter of the cruciform beams
#            OOO        §         OOO
#           OOOOO§§§§§§§§§§§§§§§§OOOOO
#            OOO        § +       OOO
#                       §  +
#                       §   +
#                      OOO   +
#                     OOOOO   +
#                      OOO     +
#                               +                          |////|
#                                ++++++++++++++++++++++++++|////| The cruciform is grounded to a vibration shaker
#                                  m0,EJ0,EA0,L0           |////|
#                                       ^
#                                  parameter of the holding frame
# Alberto Lavatelli - 2018
# alberto.lavatelli@polimi.it

begin: data;
	problem: initial value;
end: data;
#==============================================================================
#SETUP DEL SOLUTORE
begin: initial value;
	initial time: 0.;
	final time: 1.;
	time step: 5.e-4;

tolerance: 1e-6;
	max iterations: 30;
	derivatives coefficient: 1.e-6;

	#This is the solver setup part. Not necessary for the code
	linear solver: naive, colamd, mt, 1;
	nonlinear solver: newton raphson;
	method: ms, 0.6;

end: initial value;

#==============================================================================
#PARAMETRI FISICI DEL modello
set: real pigreco=3.14159;
set: real radice2=1.4142;

set: real d = 8.e-3; #diametro trave croce [m]
set: real E=72.e9; #modulo trave croce [Pa]
set: real rho=2.7e3; #densità trave croce [kg/m^3]
set: real A=pigreco/4*d^2.; #area trave croce[m^2]
set: real m=rho*A; #massa lineare trave croce [kg/m]
set: real L = .2; #lunghezza trave croce [m]
set: real EA= E*A; #rigidezza assiale trave croce
set: real Jflex=pigreco/64.*d^4.; #momento d'inzerzia flessionale
set: real Jtors=pigreco/32.*d^4.; #momento torsionale
set: real EJflex= E*Jflex; #rigidezza flessionale y trave croce
set: real EJtors= E*Jtors; #rigidezza torsionale trave croce
set: real Ispec=0.5*m*(0.5*d)^2; #momento d'inerzia per unità di lunghezza
remark: "=======> Controllo parametri croce (A,m,EA,Jflex,Jtors,Ispec)", A, m,EA,Jflex,Jtors,Ispec;

set: real d_0 = 15.e-3; #diametro trave telaio [m]
set: real E_0=72.e9; #modulo trave telaio [Pa]
set: real rho_0=2.7e3; #densità trave telaio [kg/m^3]
set: real A_0=pigreco/4.*d_0^2.; #area trave telaio[m^2]
set: real m_0=rho_0*A_0; #massa lineare trave telaio [kg/m]
set: real L_0= .3; #lunghezza trave telaio [m]
set: real EA_0= E_0*A_0; #rigidezza assiale trave telaio
set: real Jflex_0=pigreco/64.*d_0^4.; #momento d'inzerzia flessionale
set: real Jtors_0=pigreco/32.*d_0^4.; #momento torsionale
set: real EJflex_0= E_0*Jflex_0; #rigidezza flessionale y trave telaio
set: real EJtors_0= E_0*Jtors_0; #rigidezza torsionale trave telaio
set: real Ispec_0=0.5*m_0*(0.5*d_0)^2; #momento d'inerzia per unità di lunghezza
remark: "=======> Controllo parametri telaio (A,m,EA,Jflex,Jtors,Ispec)", A_0, m_0,EA_0,Jflex_0,Jtors_0,Ispec_0;

set: real rho_peso=7.8e3; #densità massa concentrata [kg/m3]
set: real L_peso=10.e-3; #lunghezza peso [m]
set: real D_peso=25.e-3; #diametro peso [m]
set: real r_peso=0.5*D_peso; #reggio
set: real M_rb=rho_peso*L_peso* pigreco/4.*D_peso^2.; #massa concentrata estremità croce
set: real Izz_rb = 0.5*M_rb*r_peso^2.; #inerzia concentrata estremità croce
set: real Ixx_rb = 1/12.*M_rb*(3.*r_peso^2.+L_peso^2.); #inerzia concentrata estremità croce

set: real v0_gomito=-0.8; #velocità iniziale gomito

set: real L_elem_telaio=L_0/3.;
set: real L_elem_croce=L/2.;

#==============================================================================
#ELEMENTI DEL MODELLO e caratteristiche output
begin: control data;
structural nodes:
	+4 #nodi del traverso
	+3 #nodi del montante
	+8 #nodi della croce (2*4)
	+6 #nodi accessori beam telaio
	+8 #nodi accessori beam croce
	;

rigid bodies:
	+4 #masse all'estremità della trave
	+3*14
	;

joints:
	+1 #connessione traverso - GROUND
	+2 #connessioni interne traverso
	+1 #connessione traverso - montante
	+2 #connessioni interne montante
	+4 #connessioni montante - croce
	+4 #connessioni interne croce
	+4 #connessioni masse-croce
	;

beams:
	+3 #pezzi traverso
	+3 #pezzi montante
	+8 #pezzi croce
;
#mettiamo la forza di gravità nel modello
gravity;
print: equation description;	#così abbiamo le equazioni

output results: netcdf; #output in netcdf

end:control data;

#==============================================================================
#POSIZIONAMENTO NODI NELLO SPAZIO FISICO E ASSEGNA CONDIZIONI INIZIALI
begin: nodes;
#STRUTTURA TELAIO PRINCIPALE
#-------------- cominciamo col traverso da sinistra verso destra. Il traverso ha 3 beams e quindi 4 nodi strutturali
set: const integer TRAV_SX=1;
set: const integer TRAV_CSX=2;
set: const integer TRAV_CDX=3;
set: const integer TRAV_DX=4;
#----------------Poi andiamo con il montante che anche lui è fatto con 3 beams. UN nodo in meno perché attaccato a TRAV_DX. dal basso verso l'alto
set: const integer MONT_CD=5;
set: const integer MONT_CU=6;
set: const integer MONT_U=7;
#----------- I sistemi di riferimento infine
set: const integer RSYS_TRAV_SX=601;
set: const integer RSYS_cbeam_1=701;
set: const integer RSYS_TRAV_CSX=801;
set: const integer RSYS_cbeam_2=702;
set: const integer RSYS_TRAV_CDX=802;
set: const integer RSYS_cbeam_3=703;
set: const integer RSYS_TRAV_DX=803;
set: const integer RSYS_TRAV_DX_vert=604; #qua giro l'asse
set: const integer RSYS_cbeam_4=704;
set: const integer RSYS_MONT_CD=804;
set: const integer RSYS_cbeam_5=705;
set: const integer RSYS_MONT_CU=805;
set: const integer RSYS_cbeam_6=706;
set: const integer RSYS_MONT_U=806;
# quindi viene così (x orizzontale e z verticale)
#
#				  													  o MONT_U
#				  													  |
#																			x  beam 6
#				  													  |
#				  													  o	MONT_CU
#				  													  |
#																			x  beam 5
#				  													  |
#				beam1				beam2			beam3	  o MONT_CD
#				  													  |
#																			x  beam 4
#				  													  |
#		||----x-----o----x-----o----x-----o
#		TRAV_SX	 TRAV_CSX			TRAV_CDX		TRAV_DX
#		<--------------- L_0 ------------->


#Definisco il sistema di riferimento locale e poi il nodo TRAV_SX
reference: RSYS_TRAV_SX,
  reference,global,null,
  reference,global,eye,
  reference,global,null,
  reference,global,null
  ;
structural: TRAV_SX, dynamic, #va a terra
reference, RSYS_TRAV_SX,null,
reference, RSYS_TRAV_SX,eye,
reference, RSYS_TRAV_SX,null, #velocità iniziali
reference, RSYS_TRAV_SX,null; #velocità angolari iniziali
#Definisco il sistema di riferimento locale e poi il nodo TRAV_CSX
reference: RSYS_TRAV_CSX,
  reference,RSYS_TRAV_SX,
		L_elem_telaio,0,0,
  reference,RSYS_TRAV_SX,eye,
  reference,RSYS_TRAV_SX,null,
  reference,RSYS_TRAV_SX,null
  ;
structural: TRAV_CSX, dynamic,
reference, RSYS_TRAV_CSX,null,
reference, RSYS_TRAV_CSX,eye,
reference, RSYS_TRAV_CSX,null, #velocità iniziali
reference, RSYS_TRAV_CSX,null;
#Definisco il sistema di riferimento locale e poi il nodo TRAV_CDX
reference: RSYS_TRAV_CDX,
  reference,RSYS_TRAV_CSX,
		L_elem_telaio,0,0,
  reference,RSYS_TRAV_CSX,eye,
  reference,RSYS_TRAV_CSX,null,
  reference,RSYS_TRAV_CSX,null
  ;
structural: TRAV_CDX, dynamic,
reference, RSYS_TRAV_CDX,null,
reference, RSYS_TRAV_CDX,eye,
reference, RSYS_TRAV_CDX,null, #velocità iniziali
reference, RSYS_TRAV_CDX,null;
#Definisco il sistema di riferimento locale e poi il nodo TRAV_DX (che è quello forzato)
reference: RSYS_TRAV_DX,
  reference,RSYS_TRAV_CDX,
		L_elem_telaio,0,0,
  reference,RSYS_TRAV_CDX,eye,
  reference,RSYS_TRAV_CDX,null,
  reference,RSYS_TRAV_CDX,null
  ;
reference: RSYS_TRAV_DX_vert,
reference, RSYS_TRAV_DX, null,
reference, RSYS_TRAV_DX,
		1, 0.,0.,1.,
		2, 0.,1.,0.,
reference, RSYS_TRAV_DX, null,
reference, RSYS_TRAV_DX, null
;
structural: TRAV_DX, dynamic,
reference, RSYS_TRAV_DX, null,
reference, RSYS_TRAV_DX,eye,
reference, RSYS_TRAV_DX,
	0.,0.,v0_gomito, #velocità iniziali
reference, RSYS_TRAV_DX, null;
#Definisco il sistema di riferimento locale e poi il nodo MONT_CD
reference: RSYS_MONT_CD,
reference,RSYS_TRAV_DX_vert,
	L_elem_telaio,0,0,
reference,RSYS_TRAV_DX_vert,eye,
reference,RSYS_TRAV_DX_vert,null,
reference,RSYS_TRAV_DX_vert,null
;
structural: MONT_CD, dynamic,
reference, RSYS_MONT_CD,null,
reference, RSYS_MONT_CD,eye,
reference, RSYS_MONT_CD,null, #velocità iniziali
reference, RSYS_MONT_CD,null;
#Definisco il sistema di riferimento locale e poi il nodo MONT_CU
reference: RSYS_MONT_CU,
reference,RSYS_MONT_CD,
	L_elem_telaio,0,0,
reference,RSYS_MONT_CD,eye,
reference,RSYS_MONT_CD,null,
reference,RSYS_MONT_CD,null
;
structural: MONT_CU, dynamic,
reference, RSYS_MONT_CU,null,
reference, RSYS_MONT_CU,eye,
reference, RSYS_MONT_CU,null, #velocità iniziali
reference, RSYS_MONT_CU,null;
#Definisco il sistema di riferimento locale e poi il nodo MONT_U
reference: RSYS_MONT_U,
reference,RSYS_MONT_CU,
	L_elem_telaio,0,0,
reference,RSYS_MONT_CU,eye,
reference,RSYS_MONT_CU,null,
reference,RSYS_MONT_CU,null
;
structural: MONT_U, dynamic,
reference, RSYS_MONT_U,null,
reference, RSYS_MONT_U,eye,
reference, RSYS_MONT_U,null, #velocità iniziali
reference, RSYS_MONT_U,null;

#STRUTTURA CROCE
#cominciamo col cerchio interno
set: const integer NODOC_i_1=8;
set: const integer NODOC_i_2=9;
set: const integer NODOC_i_3=10;
set: const integer NODOC_i_4=11;
#poi col cerchio esterno
set: const integer NODOC_e_1=12;
set: const integer NODOC_e_2=13;
set: const integer NODOC_e_3=14;
set: const integer NODOC_e_4=15;
#----------- I sistemi di riferimento infine
set: const integer RSYS_ORI_C_1=11001;
set: const integer RSYS_ORI_C_2=11002;
set: const integer RSYS_ORI_C_3=11003;
set: const integer RSYS_ORI_C_4=11004;
set: const integer RSYS_C_i_1=21001;
set: const integer RSYS_C_e_1=31001;
set: const integer RSYS_C_i_2=21002;
set: const integer RSYS_C_e_2=31002;
set: const integer RSYS_C_i_3=21003;
set: const integer RSYS_C_e_3=31003;
set: const integer RSYS_C_i_4=21004;
set: const integer RSYS_C_e_4=31004;
set: const integer RSYS_cbeam_i_1=41001;
set: const integer RSYS_cbeam_e_1=51001;
set: const integer RSYS_cbeam_i_2=41002;
set: const integer RSYS_cbeam_e_2=51002;
set: const integer RSYS_cbeam_i_3=41003;
set: const integer RSYS_cbeam_e_3=51003;
set: const integer RSYS_cbeam_i_4=41004;
set: const integer RSYS_cbeam_e_4=51004;
#alla fine viene una cosa così
#(x lungo la trave, y destra e sinistra)
#													o	e_3													§
#													|															|
#													x	cbeam_3_e										|
#													|															|Questa quota è L
#													o i_3													|
#													|															|
#													x cbeam_3_i										|
#					e_4			i_4		  |				i_2			e_2						§
#					o---x---o---x---@---x---o---x---o
#cbeam_4_e		cbeam_4_i	/	|		cbeam_2_i cbeam_2_e
#											/		x	cbeam_1_i
#										/			|
#									/				o i_1
#								/					|
#							/						x cbeam_1_e
#						/							|
#					=								o e_1

#Per prima cosa definiamo i sistemi di riferimento per le orientazioni
reference: RSYS_ORI_C_1,
  reference, RSYS_MONT_U, null,
  reference, global,
			1, -1.,-1.,0,
			2, 0.,0.,1.,
  reference, RSYS_MONT_U, null,
  reference, RSYS_MONT_U, null
  ;

reference: RSYS_ORI_C_2,
	  reference, RSYS_MONT_U, null,
	  reference, global,
				1, 1.,-1.,0,
				2, 0.,0.,1.,
	  reference, RSYS_MONT_U, null,
	  reference, RSYS_MONT_U, null
	  ;

reference: RSYS_ORI_C_3,
	  reference, RSYS_MONT_U, null,
	  reference, global,
				1, 1.,1.,0,
				2, 0.,0.,1.,
	  reference, RSYS_MONT_U, null,
	  reference, RSYS_MONT_U, null
	  ;

reference: RSYS_ORI_C_4,
	  reference, RSYS_MONT_U, null,
	  reference, global,
				1, -1.,1.,0,
				2, 0.,0.,1.,
	  reference, RSYS_MONT_U, null,
	  reference, RSYS_MONT_U, null
	  ;

#Ora i punti della prima razza della croce==================
reference: RSYS_C_i_1,
reference, RSYS_ORI_C_1,
	L_elem_croce, 0.,0.,
reference, RSYS_ORI_C_1,eye,
reference, RSYS_ORI_C_1,null,
reference, RSYS_ORI_C_1,null;

structural: NODOC_i_1, dynamic,
reference, RSYS_C_i_1, null,
reference, RSYS_C_i_1,eye,
reference, RSYS_C_i_1,null,
reference, RSYS_C_i_1,null;

reference: RSYS_C_e_1,
reference, RSYS_C_i_1,
	L_elem_croce, 0.,0.,
reference,  RSYS_C_i_1,eye,
reference,  RSYS_C_i_1,null,
reference,  RSYS_C_i_1,null;

structural: NODOC_e_1, dynamic,
reference, RSYS_C_e_1, null,
reference, RSYS_C_e_1,eye,
reference, RSYS_C_e_1,null,
reference, RSYS_C_e_1,null;

#Ora i punti della seconda razza della croce==================
reference: RSYS_C_i_2,
reference, RSYS_ORI_C_2,
	L_elem_croce, 0.,0.,
reference, RSYS_ORI_C_2,eye,
reference, RSYS_ORI_C_2,null,
reference, RSYS_ORI_C_2,null;

structural: NODOC_i_2, dynamic,
reference, RSYS_C_i_2, null,
reference, RSYS_C_i_2,eye,
reference, RSYS_C_i_2,null,
reference, RSYS_C_i_2,null;

reference: RSYS_C_e_2,
reference, RSYS_C_i_2,
	L_elem_croce, 0.,0.,
reference,  RSYS_C_i_2,eye,
reference,  RSYS_C_i_2,null,
reference,  RSYS_C_i_2,null;

structural: NODOC_e_2, dynamic,
reference, RSYS_C_e_2, null,
reference, RSYS_C_e_2,eye,
reference, RSYS_C_e_2,null,
reference, RSYS_C_e_2,null;

#Ora i punti della terza razza della croce==================
reference: RSYS_C_i_3,
reference, RSYS_ORI_C_3,
	L_elem_croce, 0.,0.,
reference, RSYS_ORI_C_3,eye,
reference, RSYS_ORI_C_3,null,
reference, RSYS_ORI_C_3,null;

structural: NODOC_i_3, dynamic,
reference, RSYS_C_i_3, null,
reference, RSYS_C_i_3,eye,
reference, RSYS_C_i_3,null,
reference, RSYS_C_i_3,null;

reference: RSYS_C_e_3,
reference, RSYS_C_i_3,
	L_elem_croce, 0.,0.,
reference,  RSYS_C_i_3,eye,
reference,  RSYS_C_i_3,null,
reference,  RSYS_C_i_3,null;

structural: NODOC_e_3, dynamic,
reference, RSYS_C_e_3, null,
reference, RSYS_C_e_3,eye,
reference, RSYS_C_e_3,null,
reference, RSYS_C_e_3,null;

#Ora i punti della quarta razza della croce==================
reference: RSYS_C_i_4,
reference, RSYS_ORI_C_4,
	L_elem_croce, 0.,0.,
reference, RSYS_ORI_C_4,eye,
reference, RSYS_ORI_C_4,null,
reference, RSYS_ORI_C_4,null;

structural: NODOC_i_4, dynamic,
reference, RSYS_C_i_4, null,
reference, RSYS_C_i_4,eye,
reference, RSYS_C_i_4,null,
reference, RSYS_C_i_4,null;

reference: RSYS_C_e_4,
reference, RSYS_C_i_4,
	L_elem_croce, 0.,0.,
reference,  RSYS_C_i_4,eye,
reference,  RSYS_C_i_4,null,
reference,  RSYS_C_i_4,null;

structural: NODOC_e_4, dynamic,
reference, RSYS_C_e_4, null,
reference, RSYS_C_e_4,eye,
reference, RSYS_C_e_4,null,
reference, RSYS_C_e_4,null;

#NODI ACCESSORI PER LE BEAM di tutto il modello
set: const integer MPOINT_BEAM_1=16;
set: const integer MPOINT_BEAM_2=17;
set: const integer MPOINT_BEAM_3=18;
set: const integer MPOINT_BEAM_4=19;
set: const integer MPOINT_BEAM_5=20;
set: const integer MPOINT_BEAM_6=21;
set: const integer MPOINT_CBEAM_1_i=22;
set: const integer MPOINT_CBEAM_1_e=23;
set: const integer MPOINT_CBEAM_2_i=24;
set: const integer MPOINT_CBEAM_2_e=25;
set: const integer MPOINT_CBEAM_3_i=26;
set: const integer MPOINT_CBEAM_3_e=27;
set: const integer MPOINT_CBEAM_4_i=28;
set: const integer MPOINT_CBEAM_4_e=29;

#°°°°°°°°°°°°°°°°°°°°°prima il telaio°°°°°°°°°°°
reference: RSYS_cbeam_1,
  reference, RSYS_TRAV_SX,
		0.5*L_elem_telaio, 0., 0.,
  reference, RSYS_TRAV_SX,eye,
  reference, RSYS_TRAV_SX,null,
  reference, RSYS_TRAV_SX,null
;
structural: MPOINT_BEAM_1, dynamic,
reference,RSYS_cbeam_1, null,
reference, RSYS_cbeam_1,eye,
reference,RSYS_cbeam_1, null,
reference,RSYS_cbeam_1, null
;

reference: RSYS_cbeam_2,
  reference, RSYS_cbeam_1,
		L_elem_telaio,0.,0.,
  reference,RSYS_cbeam_1,eye,
  reference, RSYS_cbeam_1,null,
  reference, RSYS_cbeam_1,null
  ;
structural: MPOINT_BEAM_2, dynamic,
reference,RSYS_cbeam_2, null,
reference, RSYS_cbeam_2,eye,
reference,RSYS_cbeam_2, null,
reference,RSYS_cbeam_2, null
;

reference: RSYS_cbeam_3,
  reference, RSYS_cbeam_2,
		L_elem_telaio,0.,0.,
  reference,RSYS_cbeam_2,eye,
  reference, RSYS_cbeam_2,null,
  reference, RSYS_cbeam_2,null
  ;
structural: MPOINT_BEAM_3, dynamic,
reference,RSYS_cbeam_3, null,
reference, RSYS_cbeam_3,eye,
reference,RSYS_cbeam_3, null,
reference,RSYS_cbeam_3, null
;
# occhio a girare il sistema di riferimento
reference: RSYS_cbeam_4,
  reference, RSYS_TRAV_DX_vert,
		0.5*L_elem_telaio, 0., 0.,
  reference, RSYS_TRAV_DX_vert,eye,
  reference, RSYS_TRAV_DX_vert,null,
  reference, RSYS_TRAV_DX_vert,null
;
structural: MPOINT_BEAM_4, dynamic,
reference,RSYS_cbeam_4, null,
reference, RSYS_cbeam_4,eye,
reference,RSYS_cbeam_4, null,
reference,RSYS_cbeam_4, null
;

reference: RSYS_cbeam_5,
  reference, RSYS_cbeam_4,
		L_elem_telaio,0.,0.,
  reference,RSYS_cbeam_4,eye,
  reference, RSYS_cbeam_4,null,
  reference, RSYS_cbeam_4,null
  ;
structural: MPOINT_BEAM_5, dynamic,
reference,RSYS_cbeam_5, null,
reference, RSYS_cbeam_5,eye,
reference,RSYS_cbeam_5, null,
reference,RSYS_cbeam_5, null
;

reference: RSYS_cbeam_6,
  reference, RSYS_cbeam_5,
		L_elem_telaio,0.,0.,
  reference,RSYS_cbeam_5,eye,
  reference, RSYS_cbeam_5,null,
  reference, RSYS_cbeam_5,null
  ;
	structural: MPOINT_BEAM_6, dynamic,
	reference,RSYS_cbeam_6, null,
	reference, RSYS_cbeam_6,eye,
	reference,RSYS_cbeam_6, null,
	reference,RSYS_cbeam_6, null
	;
#°°°°°°°°°°°°°°°°°°°°°poi la croce°°°°°°°°°°°
reference: RSYS_cbeam_i_1,
  reference, RSYS_ORI_C_1, L_elem_croce*0.5, 0.,0.,
  reference, RSYS_ORI_C_1, eye,
  reference, RSYS_ORI_C_1, null,
  reference, RSYS_ORI_C_1, null
  ;
structural: MPOINT_CBEAM_1_i, dynamic,
reference, RSYS_cbeam_i_1, null,
reference, RSYS_cbeam_i_1, eye,
reference, RSYS_cbeam_i_1, null,
reference, RSYS_cbeam_i_1, null
;
reference: RSYS_cbeam_e_1,
  reference, RSYS_cbeam_i_1, L_elem_croce, 0.,0.,
  reference, RSYS_cbeam_i_1, eye,
  reference, RSYS_cbeam_i_1, null,
  reference, RSYS_cbeam_i_1, null
  ;
structural: MPOINT_CBEAM_1_e, dynamic,
reference, RSYS_cbeam_e_1, null,
reference, RSYS_cbeam_e_1, eye,
reference, RSYS_cbeam_e_1, null,
reference, RSYS_cbeam_e_1, null
;

reference: RSYS_cbeam_i_2,
  reference, RSYS_ORI_C_2, L_elem_croce*0.5, 0.,0.,
  reference, RSYS_ORI_C_2, eye,
  reference, RSYS_ORI_C_2, null,
  reference, RSYS_ORI_C_2, null
  ;
structural: MPOINT_CBEAM_2_i, dynamic,
reference, RSYS_cbeam_i_2, null,
reference, RSYS_cbeam_i_2, eye,
reference, RSYS_cbeam_i_2, null,
reference, RSYS_cbeam_i_2, null
;
reference: RSYS_cbeam_e_2,
  reference, RSYS_cbeam_i_2, L_elem_croce, 0.,0.,
  reference, RSYS_cbeam_i_2, eye,
  reference, RSYS_cbeam_i_2, null,
  reference, RSYS_cbeam_i_2, null
  ;
structural: MPOINT_CBEAM_2_e, dynamic,
reference, RSYS_cbeam_e_2, null,
reference, RSYS_cbeam_e_2, eye,
reference, RSYS_cbeam_e_2, null,
reference, RSYS_cbeam_e_2, null
;

reference: RSYS_cbeam_i_3,
  reference, RSYS_ORI_C_3, L_elem_croce*0.5, 0.,0.,
  reference, RSYS_ORI_C_3, eye,
  reference, RSYS_ORI_C_3, null,
  reference, RSYS_ORI_C_3, null
  ;
structural: MPOINT_CBEAM_3_i, dynamic,
reference, RSYS_cbeam_i_3, null,
reference, RSYS_cbeam_i_3, eye,
reference, RSYS_cbeam_i_3, null,
reference, RSYS_cbeam_i_3, null
;
reference: RSYS_cbeam_e_3,
  reference, RSYS_cbeam_i_3, L_elem_croce, 0.,0.,
  reference, RSYS_cbeam_i_3, eye,
  reference, RSYS_cbeam_i_3, null,
  reference, RSYS_cbeam_i_3, null
  ;
structural: MPOINT_CBEAM_3_e, dynamic,
reference, RSYS_cbeam_e_3, null,
reference, RSYS_cbeam_e_3, eye,
reference, RSYS_cbeam_e_3, null,
reference, RSYS_cbeam_e_3, null
;

reference: RSYS_cbeam_i_4,
  reference, RSYS_ORI_C_4, L_elem_croce*0.5, 0.,0.,
  reference, RSYS_ORI_C_4, eye,
  reference, RSYS_ORI_C_4, null,
  reference, RSYS_ORI_C_4, null
  ;
structural: MPOINT_CBEAM_4_i, dynamic,
reference, RSYS_cbeam_i_4, null,
reference, RSYS_cbeam_i_4, eye,
reference, RSYS_cbeam_i_4, null,
reference, RSYS_cbeam_i_4, null
;
reference: RSYS_cbeam_e_4,
  reference, RSYS_cbeam_i_4, L_elem_croce, 0.,0.,
  reference, RSYS_cbeam_i_4, eye,
  reference, RSYS_cbeam_i_4, null,
  reference, RSYS_cbeam_i_4, null
  ;
structural: MPOINT_CBEAM_4_e, dynamic,
reference, RSYS_cbeam_e_4, null,
reference, RSYS_cbeam_e_4, eye,
reference, RSYS_cbeam_e_4, null,
reference, RSYS_cbeam_e_4, null
;

end: nodes;

#==============================================================================
#ASSEMBLAGGIO DEL MODELLO
begin: elements;

#come prima cosa assembliamo la forza di gravità
gravity: uniform, 0., 0., -1.,9.81
;
#metto a terra la struttura
set: const integer TERRA_JOINT=1;
joint: TERRA_JOINT,
  clamp,
    TRAV_SX,
			node,
			node;
#_______________________________________________________________________________
#COSTRUZIONE TRAVE: beam1
set: const integer ASM_beam1=1001; #id assembly
set: const integer body1_beam1=101;
set: const integer body2_beam1=102;
set: const integer body3_beam1=103;
#definiamo prima i parametri concentrati per il comportamento dinamico
body: body1_beam1, TRAV_SX,
						(L_elem_telaio/4.)*m_0,
						(L_elem_telaio/8.), 0., 0., #qua l'offset dovrebbe essere positivo per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0;
body: body2_beam1 ,MPOINT_BEAM_1,
						(L_elem_telaio/2.)*m_0,
						null, #qua niente offset perché siamo al centro trave
						diag, (L_elem_telaio/2.)*Ispec_0, 1./12.*(L_elem_telaio/2.)^3*m_0, 1./12.*(L_elem_telaio/2.)^3*m_0;
body: body3_beam1, TRAV_CSX,
						(L_elem_telaio/4.)*m_0,
						-(L_elem_telaio/8.), 0., 0., #qua negativo per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0;
#definizione trave
beam: ASM_beam1, #id assembly
		TRAV_SX,null, #link ai corpi + orientazione
		MPOINT_BEAM_1,null, #link ai corpi + orientazione
		TRAV_CSX,null, #link ai corpi + orientazione
		eye,
		linear elastic generic,
				diag, EA_0, EA_0, EA_0, EJflex_0, EJflex_0, EJtors_0,
		same,
		same;
#_______________________________________________________________________________
#COSTRUZIONE TRAVE: beam2
set: const integer ASM_beam2=1002; #id assembly
set: const integer body1_beam2=201;
set: const integer body2_beam2=202;
set: const integer body3_beam2=203;
#definiamo prima i parametri concentrati per il comportamento dinamico
body: body1_beam2, TRAV_CSX,
						(L_elem_telaio/4.)*m_0,
						(L_elem_telaio/8.), 0., 0., #qua l'offset dovrebbe essere positivo per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0;
body: body2_beam2 ,MPOINT_BEAM_2,
						(L_elem_telaio/2.)*m_0,
						null, #qua niente offset perché siamo al centro trave
						diag, (L_elem_telaio/2.)*Ispec_0, 1./12.*(L_elem_telaio/2.)^3*m_0, 1./12.*(L_elem_telaio/2.)^3*m_0;
body: body3_beam2, TRAV_CDX,
						(L_elem_telaio/4.)*m_0,
						-(L_elem_telaio/8.), 0., 0., #qua negativo per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0;
#definizione trave
beam: ASM_beam2, #id assembly
		TRAV_CSX,null, #link ai corpi + orientazione
		MPOINT_BEAM_2,null, #link ai corpi + orientazione
		TRAV_CDX,null, #link ai corpi + orientazione
		eye,
		linear elastic generic,
				diag, EA_0, EA_0, EA_0, EJflex_0, EJflex_0, EJtors_0,
		same,
		same;
#_______________________________________________________________________________
#COSTRUZIONE TRAVE: beam3
set: const integer ASM_beam3=1003; #id assembly
set: const integer body1_beam3=301;
set: const integer body2_beam3=302;
set: const integer body3_beam3=303;
#definiamo prima i parametri concentrati per il comportamento dinamico
body: body1_beam3, TRAV_CDX,
						(L_elem_telaio/4.)*m_0,
						(L_elem_telaio/8.), 0., 0., #qua l'offset dovrebbe essere positivo per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0;
body: body2_beam3 ,MPOINT_BEAM_3,
						(L_elem_telaio/2.)*m_0,
						null, #qua niente offset perché siamo al centro trave
						diag, (L_elem_telaio/2.)*Ispec_0, 1./12.*(L_elem_telaio/2.)^3*m_0, 1./12.*(L_elem_telaio/2.)^3*m_0;
body: body3_beam3, TRAV_DX,
						(L_elem_telaio/4.)*m_0,
						-(L_elem_telaio/8.), 0., 0., #qua negativo per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0;
#definizione trave
beam: ASM_beam3, #id assembly
		TRAV_CDX,null, #link ai corpi + orientazione
		MPOINT_BEAM_3,null, #link ai corpi + orientazione
		TRAV_DX,null, #link ai corpi + orientazione
		eye,
		linear elastic generic,
				diag, EA_0, EA_0, EA_0, EJflex_0, EJflex_0, EJtors_0,
		same,
		same;

#_______________________________________________________________________________
#COSTRUZIONE TRAVE: beam4
#adesso che la beam è inclinata definisco i sistemi di riferimento locali
set: const integer REF_beam4=1804;
reference: REF_beam4,
  reference, global, L_0,0.,0.,
	reference, global,
	 		1, 0.,0.,1.,
			2, 0.,1.,0.,
	reference, global, null,
	reference, global, null;
#ora lavoro sulla trave
set: const integer ASM_beam4=1004; #id assembly
set: const integer body1_beam4=401;
set: const integer body2_beam4=402;
set: const integer body3_beam4=403;
#definiamo prima i parametri concentrati per il comportamento dinamico
#attenzione a sistemare l'orientazione perché ora andiamo verso l'alto
body: body1_beam4, TRAV_DX,
						(L_elem_telaio/4.)*m_0,
						reference, REF_beam4, -(L_elem_telaio/8.),0.,0., #qua l'offset dovrebbe essere negativo rispetto al centro per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0,
						inertial, reference, REF_beam4, eye;
body: body2_beam4 ,MPOINT_BEAM_4,
						(L_elem_telaio/2.)*m_0,
						reference, REF_beam4, null, #qua niente offset perché siamo al centro trave
						diag, (L_elem_telaio/2.)*Ispec_0, 1./12.*(L_elem_telaio/2.)^3*m_0, 1./12.*(L_elem_telaio/2.)^3*m_0,
						inertial, reference, REF_beam4, eye;
body: body3_beam4, MONT_CD,
						(L_elem_telaio/4.)*m_0,
						reference, REF_beam4, (L_elem_telaio/8.),0.,0., #qua negativo per spostare la massa verso il centro trave
						diag, (L_elem_telaio/4.)*Ispec_0, 1./12.*(L_elem_telaio/4.)^3*m_0, 1./12.*(L_elem_telaio/4.)^3*m_0,
						inertial, reference, REF_beam4, eye;
#in questo caso ricordarsi che tutto il tensore di inerzia è riferito alle rotazioni del sistema di riferimento locale!!!
#Andrebbero confrontate con le precedenti sulle travi orizzontali col sistema globale
#definizione trave
beam: ASM_beam4, #id assembly
		TRAV_DX,null, #link ai corpi + orientazione
		MPOINT_BEAM_4,null, #link ai corpi + orientazione
		MONT_CD,null, #link ai corpi + orientazione
		eye,
		linear elastic generic,
				diag, EA_0, EA_0, EA_0, EJflex_0, EJflex_0, EJtors_0,
		same,
		same;


end: elements;
